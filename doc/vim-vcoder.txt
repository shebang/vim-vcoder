*vim-vcoder.txt*
                                                        *shebang* *vim-vcoder*

==============================================================================
CONTENTS                                                 *vim-vcoder-contents*
  1. Introduction...........................................|vim-vcoder-intro|
  2. Functions..........................................|vim-vcoder-functions|

==============================================================================
INTRODUCTION                                                *vim-vcoder-intro*

vcoder is a test execution framework for vim.


==============================================================================
FUNCTIONS                                               *vim-vcoder-functions*

vcoder#testrunner#register({name})              *vcoder#testrunner#register()*
  Registers test runner {name} with vcoder


vcoder#testrunner#run({context})                     *vcoder#testrunner#run()*
  Runs a test by delegating the work to the approriate test runner.


vcoder#testrunner#jobstart({cmd})               *vcoder#testrunner#jobstart()*
  Starts a job from a test runner. Restults are displayed depending on
  opts.notify (see below).

  Options can be configured using [a:1] which is a |Dict| with the following
  settings:

  opts.notify: 'status_line', 'previewwindow'


vcoder#testrunner#themis#spec()              *vcoder#testrunner#themis#spec()*
  Returns a spec |Dict| for registering this test runner with vcoder.

    * testrunner_spec.name: the name of this test runner
    * testrunner_spec.install_cmd: the command to use for installing your test
      runner
    * testrunner_spec.update_cmd: the command to use for updating your test
      runner
    * testrunner_spec.cmd: The command to execute test runner
    * testrunner_spec.args Additional argruments for the cmd



vcoder#util#resolve_placeholders({text}, {values})
                                          *vcoder#util#resolve_placeholders()*
  Replace all placeholders in {a:text} with values from dict {a:values}.
  Placeholders are wrapped with %-chars. Each placeholder has a corresponding
  key in the values dict.


vim:tw=78:ts=8:ft=help:norl:
