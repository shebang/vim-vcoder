*vim-vcoder.txt*
                                                        *shebang* *vim-vcoder*

==============================================================================
CONTENTS                                                 *vim-vcoder-contents*
  1. Introduction...........................................|vim-vcoder-intro|
  2. Functions..........................................|vim-vcoder-functions|
  3. Installation....................................|vim-vcoder-installation|

==============================================================================
INTRODUCTION                                                *vim-vcoder-intro*

vcoder is a test execution framework for vim. It's main purpose is for
programmers who want to run automated tests in their editor.


==============================================================================
FUNCTIONS                                               *vim-vcoder-functions*

vcoder#init()                                                  *vcoder#init()*
  Initializes vcoder

vcoder#enable({ft})                                          *vcoder#enable()*
  Enable vcoder for a filetype. The argument {ft} can be a list or a single
  string.

vcoder#disable({ft})                                        *vcoder#disable()*
  Disable vcoder for a filetype. The argument {ft} can be a list or a single
  string.

vcoder#enabled_ft()                                      *vcoder#enabled_ft()*
  Returns a list of enabled filetypes.

vcoder#cache_path()                                      *vcoder#cache_path()*
  Returns the path to the internal cache where vcoder stores internal data.

vcoder#is_enabled({ft})                                  *vcoder#is_enabled()*
  Returns true if filetype {ft} is enabled.

vcoder#testrunner#get_target({name}, {context})
                                              *vcoder#testrunner#get_target()*
  Returns the target to execute (file or project). This function is dependant
  on the values of the following variables. Each may return a test target
  effectivly overwriting the defaults. Order is as follows

    * b:vcoder_target
    * g:vcoder_target
    * default: file


vcoder#testrunner#register({name})              *vcoder#testrunner#register()*
  Registers test runner {name} with vcoder


vcoder#testrunner#run({name}, {context})             *vcoder#testrunner#run()*
  Runs a test described by {context} with test runner {name}.


vcoder#testrunner#jobstart({cmd})               *vcoder#testrunner#jobstart()*
  opts.summary_only (see below).

  Options can be configured using [a:1] which is a |Dict| with the following
  settings:

    * opts.summary_only: v:false Shows job status only via status line. The
      default is to show the results via resultview.


vcoder#testrunner#themis#spec()              *vcoder#testrunner#themis#spec()*
  Returns a spec |Dict| for registering this test runner with vcoder.

    * testrunner_spec.name: the name of this test runner
    * testrunner_spec.install_cmd: the command to use for installing your test
      runner
    * testrunner_spec.update_cmd: the command to use for updating your test
      runner
    * testrunner_spec.cmd: The command to execute test runner
    * testrunner_spec.args Additional argruments for the cmd



vcoder#util#resolve_placeholders({text}, {values})
                                          *vcoder#util#resolve_placeholders()*
  Replace all placeholders in {a:text} with values from dict {a:values}.
  Placeholders are wrapped with %-chars. Each placeholder has a corresponding
  key in the values dict.

==============================================================================
INSTALLATION                                         *vim-vcoder-installation*


vcoder uses a declarative style to configure the behaviour of text execution.


>
  call vcoder#testrunner#register('themis')

  call vcoder#rules#for('vim', 'testfile', {
    \ 'location': '%project_root%/test/themis/%file_project_dir%/%file_name%',
    \ })
  call vcoder#rules#for('vim', 'testproject', {
    \ 'location': '%project_root%/test/themis',
    \ })
  call vcoder#rules#for('vim', 'testrunner', 'themis')

  call vcoder#enable(['vim'])
<




vim:tw=78:ts=8:ft=help:norl:
